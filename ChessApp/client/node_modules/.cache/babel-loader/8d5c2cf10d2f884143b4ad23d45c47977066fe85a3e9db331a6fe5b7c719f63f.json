{"ast":null,"code":"var _jsxFileName = \"Z:\\\\IGMProfile\\\\Desktop\\\\final-330\\\\ChessApp\\\\client\\\\src\\\\chessGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chessboard from 'chessboardjs';\nimport Chess from 'chessjs';\n\n// There Is Probably An Easier Way To Do This, But I Did It The Same Way As The Chatbox, Both For Organization, And Because I Know\n// This Method Already Works. Documentation On This Is Lacking but https://chessboardjs.com/examples#1000\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessGame = ({\n  socket,\n  room\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [board, setBoard] = useState(null);\n  useEffect(() => {\n    const board = Chessboard('game-board', {\n      draggable: true,\n      position: 'start',\n      onDrop: handleMove\n    });\n    setBoard(board);\n    socket.on('move', handleRemoteMove);\n    return () => {\n      socket.off('move');\n    };\n  }, []);\n  const handleMove = (source, target) => {\n    const move = game.move({\n      from: source,\n      to: target\n    });\n    if (move !== null) {\n      socket.emit('move', {\n        source,\n        target,\n        room\n      });\n      updateBoard();\n    } else {\n      // Invalid move, snap back to original position\n      updateBoard();\n    }\n  };\n  const handleRemoteMove = ({\n    source,\n    target\n  }) => {\n    game.move({\n      from: source,\n      to: target\n    });\n    updateBoard();\n  };\n  const updateBoard = () => {\n    setBoard(Chessboard('game-board', 'start'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game-board\",\n    style: {\n      width: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(ChessGame, \"fGHdockfQCopBWNXuVgDNfCUpA0=\");\n_c = ChessGame;\nexport default ChessGame;\nvar _c;\n$RefreshReg$(_c, \"ChessGame\");","map":{"version":3,"names":["React","useEffect","useState","Chessboard","Chess","jsxDEV","_jsxDEV","ChessGame","socket","room","_s","game","setGame","board","setBoard","draggable","position","onDrop","handleMove","on","handleRemoteMove","off","source","target","move","from","to","emit","updateBoard","id","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["Z:/IGMProfile/Desktop/final-330/ChessApp/client/src/chessGame.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chessboard from 'chessboardjs';\r\nimport Chess from 'chessjs';\r\n\r\n// There Is Probably An Easier Way To Do This, But I Did It The Same Way As The Chatbox, Both For Organization, And Because I Know\r\n// This Method Already Works. Documentation On This Is Lacking but https://chessboardjs.com/examples#1000\r\nconst ChessGame = ({ socket, room }) => {\r\n    const [game, setGame] = useState(new Chess());\r\n    const [board, setBoard] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const board = Chessboard('game-board', {\r\n        draggable: true,\r\n        position: 'start',\r\n        onDrop: handleMove\r\n      });\r\n  \r\n      setBoard(board);\r\n  \r\n      socket.on('move', handleRemoteMove);\r\n  \r\n      return () => {\r\n        socket.off('move');\r\n      };\r\n    }, []);\r\n  \r\n    const handleMove = (source, target) => {\r\n      const move = game.move({ from: source, to: target });\r\n  \r\n      if (move !== null) {\r\n        socket.emit('move', { source, target, room });\r\n        updateBoard();\r\n      } else {\r\n        // Invalid move, snap back to original position\r\n        updateBoard();\r\n      }\r\n    };\r\n  \r\n    const handleRemoteMove = ({ source, target }) => {\r\n      game.move({ from: source, to: target });\r\n      updateBoard();\r\n    };\r\n  \r\n    const updateBoard = () => {\r\n      setBoard(Chessboard('game-board', 'start'));\r\n    };\r\n  \r\n    return <div id=\"game-board\" style={{ width: '400px' }} />;\r\n  };\r\n  \r\n  export default ChessGame;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIE,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGV,UAAU,CAAC,YAAY,EAAE;MACrCY,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAEC;IACV,CAAC,CAAC;IAEFJ,QAAQ,CAACD,KAAK,CAAC;IAEfL,MAAM,CAACW,EAAE,CAAC,MAAM,EAAEC,gBAAgB,CAAC;IAEnC,OAAO,MAAM;MACXZ,MAAM,CAACa,GAAG,CAAC,MAAM,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMH,UAAU,GAAGA,CAACI,MAAM,EAAEC,MAAM,KAAK;IACrC,MAAMC,IAAI,GAAGb,IAAI,CAACa,IAAI,CAAC;MAAEC,IAAI,EAAEH,MAAM;MAAEI,EAAE,EAAEH;IAAO,CAAC,CAAC;IAEpD,IAAIC,IAAI,KAAK,IAAI,EAAE;MACjBhB,MAAM,CAACmB,IAAI,CAAC,MAAM,EAAE;QAAEL,MAAM;QAAEC,MAAM;QAAEd;MAAK,CAAC,CAAC;MAC7CmB,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACL;MACAA,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMR,gBAAgB,GAAGA,CAAC;IAAEE,MAAM;IAAEC;EAAO,CAAC,KAAK;IAC/CZ,IAAI,CAACa,IAAI,CAAC;MAAEC,IAAI,EAAEH,MAAM;MAAEI,EAAE,EAAEH;IAAO,CAAC,CAAC;IACvCK,WAAW,CAAC,CAAC;EACf,CAAC;EAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBd,QAAQ,CAACX,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EAC7C,CAAC;EAED,oBAAOG,OAAA;IAAKuB,EAAE,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAACzB,EAAA,CA1CEH,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA4Cb,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}