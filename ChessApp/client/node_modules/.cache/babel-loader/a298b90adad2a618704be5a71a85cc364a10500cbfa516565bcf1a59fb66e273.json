{"ast":null,"code":"/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\n\n//------------------------------------------------------------------------------\n// Chess Util Functions\n//------------------------------------------------------------------------------\nvar COLUMNS = 'abcdefgh'.split('');\nfunction validMove(move) {\n  // move should be a string\n  if (typeof move !== 'string') return false;\n\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\n  var tmp = move.split('-');\n  if (tmp.length !== 2) return false;\n  return validSquare(tmp[0]) === true && validSquare(tmp[1]) === true;\n}\nfunction validSquare(square) {\n  if (typeof square !== 'string') return false;\n  return square.search(/^[a-h][1-8]$/) !== -1;\n}\nfunction validPieceCode(code) {\n  if (typeof code !== 'string') return false;\n  return code.search(/^[bw][KQRNBP]$/) !== -1;\n}\n\n// TODO: this whole function could probably be replaced with a single regex\nfunction validFen(fen) {\n  if (typeof fen !== 'string') return false;\n\n  // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n  fen = fen.replace(/ .+$/, '');\n\n  // FEN should be 8 sections separated by slashes\n  var chunks = fen.split('/');\n  if (chunks.length !== 8) return false;\n\n  // check the piece sections\n  for (var i = 0; i < 8; i++) {\n    if (chunks[i] === '' || chunks[i].length > 8 || chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction validPositionObject(pos) {\n  if (typeof pos !== 'object') return false;\n  for (var i in pos) {\n    if (pos.hasOwnProperty(i) !== true) continue;\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// convert FEN piece code to bP, wK, etc\nfunction fenToPieceCode(piece) {\n  // black piece\n  if (piece.toLowerCase() === piece) {\n    return 'b' + piece.toUpperCase();\n  }\n\n  // white piece\n  return 'w' + piece.toUpperCase();\n}\n\n// convert bP, wK, etc code to FEN structure\nfunction pieceCodeToFen(piece) {\n  var tmp = piece.split('');\n\n  // white piece\n  if (tmp[0] === 'w') {\n    return tmp[1].toUpperCase();\n  }\n\n  // black piece\n  return tmp[1].toLowerCase();\n}\n\n// convert FEN string to position object\n// returns false if the FEN string is invalid\nfunction fenToObj(fen) {\n  if (validFen(fen) !== true) {\n    return false;\n  }\n\n  // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n  fen = fen.replace(/ .+$/, '');\n  var rows = fen.split('/');\n  var position = {};\n  var currentRow = 8;\n  for (var i = 0; i < 8; i++) {\n    var row = rows[i].split('');\n    var colIndex = 0;\n\n    // loop through each character in the FEN section\n    for (var j = 0; j < row.length; j++) {\n      // number / empty squares\n      if (row[j].search(/[1-8]/) !== -1) {\n        var emptySquares = parseInt(row[j], 10);\n        colIndex += emptySquares;\n      }\n      // piece\n      else {\n        var square = COLUMNS[colIndex] + currentRow;\n        position[square] = fenToPieceCode(row[j]);\n        colIndex++;\n      }\n    }\n    currentRow--;\n  }\n  return position;\n}\n\n// position object to FEN string\n// returns false if the obj is not a valid position object\nfunction objToFen(obj) {\n  if (validPositionObject(obj) !== true) {\n    return false;\n  }\n  var fen = '';\n  var currentRow = 8;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      var square = COLUMNS[j] + currentRow;\n\n      // piece exists\n      if (obj.hasOwnProperty(square) === true) {\n        fen += pieceCodeToFen(obj[square]);\n      }\n\n      // empty space\n      else {\n        fen += '1';\n      }\n    }\n    if (i !== 7) {\n      fen += '/';\n    }\n    currentRow--;\n  }\n\n  // squeeze the numbers together\n  // haha, I love this solution...\n  fen = fen.replace(/11111111/g, '8');\n  fen = fen.replace(/1111111/g, '7');\n  fen = fen.replace(/111111/g, '6');\n  fen = fen.replace(/11111/g, '5');\n  fen = fen.replace(/1111/g, '4');\n  fen = fen.replace(/111/g, '3');\n  fen = fen.replace(/11/g, '2');\n  return fen;\n}\nvar ChessBoard = function (containerElOrId, cfg) {\n  cfg = cfg || {};\n\n  //------------------------------------------------------------------------------\n  // Constants\n  //------------------------------------------------------------------------------\n\n  var MINIMUM_JQUERY_VERSION = '1.7.0',\n    START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\n    START_POSITION = fenToObj(START_FEN);\n\n  // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n  var CSS = {\n    alpha: 'alpha-d2270',\n    black: 'black-3c85d',\n    board: 'board-b72b1',\n    chessboard: 'chessboard-63f37',\n    clearfix: 'clearfix-7da63',\n    highlight1: 'highlight1-32417',\n    highlight2: 'highlight2-9c5d2',\n    notation: 'notation-322f9',\n    numeric: 'numeric-fc462',\n    piece: 'piece-417db',\n    row: 'row-5277c',\n    sparePieces: 'spare-pieces-7492f',\n    sparePiecesBottom: 'spare-pieces-bottom-ae20f',\n    sparePiecesTop: 'spare-pieces-top-4028b',\n    square: 'square-55d63',\n    white: 'white-1e1d7'\n  };\n\n  //------------------------------------------------------------------------------\n  // Module Scope Variables\n  //------------------------------------------------------------------------------\n\n  // DOM elements\n  var containerEl, boardEl, draggedPieceEl, sparePiecesTopEl, sparePiecesBottomEl;\n\n  // constructor return object\n  var widget = {};\n\n  //------------------------------------------------------------------------------\n  // Stateful\n  //------------------------------------------------------------------------------\n\n  var ANIMATION_HAPPENING = false,\n    BOARD_BORDER_SIZE = 2,\n    CURRENT_ORIENTATION = 'white',\n    CURRENT_POSITION = {},\n    SQUARE_SIZE,\n    DRAGGED_PIECE,\n    DRAGGED_PIECE_LOCATION,\n    DRAGGED_PIECE_SOURCE,\n    DRAGGING_A_PIECE = false,\n    SPARE_PIECE_ELS_IDS = {},\n    SQUARE_ELS_IDS = {},\n    SQUARE_ELS_OFFSETS;\n\n  //------------------------------------------------------------------------------\n  // JS Util Functions\n  //------------------------------------------------------------------------------\n\n  // http://tinyurl.com/3ttloxj\n  function uuid() {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = Math.random() * 16 | 0;\n      return r.toString(16);\n    });\n  }\n  function deepCopy(thing) {\n    return JSON.parse(JSON.stringify(thing));\n  }\n  function parseSemVer(version) {\n    var tmp = version.split('.');\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    };\n  }\n\n  // returns true if version is >= minimum\n  function compareSemVer(version, minimum) {\n    version = parseSemVer(version);\n    minimum = parseSemVer(minimum);\n    var versionNum = version.major * 10000 * 10000 + version.minor * 10000 + version.patch;\n    var minimumNum = minimum.major * 10000 * 10000 + minimum.minor * 10000 + minimum.patch;\n    return versionNum >= minimumNum;\n  }\n\n  //------------------------------------------------------------------------------\n  // Validation / Errors\n  //------------------------------------------------------------------------------\n\n  function error(code, msg, obj) {\n    // do nothing if showErrors is not set\n    if (cfg.hasOwnProperty('showErrors') !== true || cfg.showErrors === false) {\n      return;\n    }\n    var errorText = 'ChessBoard Error ' + code + ': ' + msg;\n\n    // print to console\n    if (cfg.showErrors === 'console' && typeof console === 'object' && typeof console.log === 'function') {\n      console.log(errorText);\n      if (arguments.length >= 2) {\n        console.log(obj);\n      }\n      return;\n    }\n\n    // alert errors\n    if (cfg.showErrors === 'alert') {\n      if (obj) {\n        errorText += '\\n\\n' + JSON.stringify(obj);\n      }\n      window.alert(errorText);\n      return;\n    }\n\n    // custom function\n    if (typeof cfg.showErrors === 'function') {\n      cfg.showErrors(code, msg, obj);\n    }\n  }\n\n  // check dependencies\n  function checkDeps() {\n    // if containerId is a string, it must be the ID of a DOM node\n    if (typeof containerElOrId === 'string') {\n      // cannot be empty\n      if (containerElOrId === '') {\n        window.alert('ChessBoard Error 1001: ' + 'The first argument to ChessBoard() cannot be an empty string.' + '\\n\\nExiting...');\n        return false;\n      }\n\n      // make sure the container element exists in the DOM\n      var el = document.getElementById(containerElOrId);\n      if (!el) {\n        window.alert('ChessBoard Error 1002: Element with id \"' + containerElOrId + '\" does not exist in the DOM.' + '\\n\\nExiting...');\n        return false;\n      }\n\n      // set the containerEl\n      containerEl = $(el);\n    }\n\n    // else it must be something that becomes a jQuery collection\n    // with size 1\n    // ie: a single DOM node or jQuery object\n    else {\n      containerEl = $(containerElOrId);\n      if (containerEl.length !== 1) {\n        window.alert('ChessBoard Error 1003: The first argument to ' + 'ChessBoard() must be an ID or a single DOM node.' + '\\n\\nExiting...');\n        return false;\n      }\n    }\n\n    // JSON must exist\n    if (!window.JSON || typeof JSON.stringify !== 'function' || typeof JSON.parse !== 'function') {\n      window.alert('ChessBoard Error 1004: JSON does not exist. ' + 'Please include a JSON polyfill.\\n\\nExiting...');\n      return false;\n    }\n\n    // check for a compatible version of jQuery\n    if (!(typeof window.$ && $.fn && $.fn.jquery && compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\n      window.alert('ChessBoard Error 1005: Unable to find a valid version ' + 'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' + 'higher on the page.\\n\\nExiting...');\n      return false;\n    }\n    return true;\n  }\n  function validAnimationSpeed(speed) {\n    if (speed === 'fast' || speed === 'slow') {\n      return true;\n    }\n    if (parseInt(speed, 10) + '' !== speed + '') {\n      return false;\n    }\n    return speed >= 0;\n  }\n\n  // validate config / set default options\n  function expandConfig() {\n    if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\n      cfg = {\n        position: cfg\n      };\n    }\n\n    // default for orientation is white\n    if (cfg.orientation !== 'black') {\n      cfg.orientation = 'white';\n    }\n    CURRENT_ORIENTATION = cfg.orientation;\n\n    // default for showNotation is true\n    if (cfg.showNotation !== false) {\n      cfg.showNotation = true;\n    }\n\n    // default for draggable is false\n    if (cfg.draggable !== true) {\n      cfg.draggable = false;\n    }\n\n    // default for dropOffBoard is 'snapback'\n    if (cfg.dropOffBoard !== 'trash') {\n      cfg.dropOffBoard = 'snapback';\n    }\n\n    // default for sparePieces is false\n    if (cfg.sparePieces !== true) {\n      cfg.sparePieces = false;\n    }\n\n    // draggable must be true if sparePieces is enabled\n    if (cfg.sparePieces === true) {\n      cfg.draggable = true;\n    }\n\n    // default piece theme is wikipedia\n    if (cfg.hasOwnProperty('pieceTheme') !== true || typeof cfg.pieceTheme !== 'string' && typeof cfg.pieceTheme !== 'function') {\n      cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\n    }\n\n    // animation speeds\n    if (cfg.hasOwnProperty('appearSpeed') !== true || validAnimationSpeed(cfg.appearSpeed) !== true) {\n      cfg.appearSpeed = 200;\n    }\n    if (cfg.hasOwnProperty('moveSpeed') !== true || validAnimationSpeed(cfg.moveSpeed) !== true) {\n      cfg.moveSpeed = 200;\n    }\n    if (cfg.hasOwnProperty('snapbackSpeed') !== true || validAnimationSpeed(cfg.snapbackSpeed) !== true) {\n      cfg.snapbackSpeed = 50;\n    }\n    if (cfg.hasOwnProperty('snapSpeed') !== true || validAnimationSpeed(cfg.snapSpeed) !== true) {\n      cfg.snapSpeed = 25;\n    }\n    if (cfg.hasOwnProperty('trashSpeed') !== true || validAnimationSpeed(cfg.trashSpeed) !== true) {\n      cfg.trashSpeed = 100;\n    }\n\n    // make sure position is valid\n    if (cfg.hasOwnProperty('position') === true) {\n      if (cfg.position === 'start') {\n        CURRENT_POSITION = deepCopy(START_POSITION);\n      } else if (validFen(cfg.position) === true) {\n        CURRENT_POSITION = fenToObj(cfg.position);\n      } else if (validPositionObject(cfg.position) === true) {\n        CURRENT_POSITION = deepCopy(cfg.position);\n      } else {\n        error(7263, 'Invalid value passed to config.position.', cfg.position);\n      }\n    }\n    return true;\n  }\n\n  //------------------------------------------------------------------------------\n  // DOM Misc\n  //------------------------------------------------------------------------------\n\n  // calculates square size based on the width of the container\n  // got a little CSS black magic here, so let me explain:\n  // get the width of the container element (could be anything), reduce by 1 for\n  // fudge factor, and then keep reducing until we find an exact mod 8 for\n  // our square size\n  function calculateSquareSize() {\n    var containerWidth = parseInt(containerEl.width(), 10);\n\n    // defensive, prevent infinite loop\n    if (!containerWidth || containerWidth <= 0) {\n      return 0;\n    }\n\n    // pad one pixel\n    var boardWidth = containerWidth - 1;\n    while (boardWidth % 8 !== 0 && boardWidth > 0) {\n      boardWidth--;\n    }\n    return boardWidth / 8;\n  }\n\n  // create random IDs for elements\n  function createElIds() {\n    // squares on the board\n    for (var i = 0; i < COLUMNS.length; i++) {\n      for (var j = 1; j <= 8; j++) {\n        var square = COLUMNS[i] + j;\n        SQUARE_ELS_IDS[square] = square + '-' + uuid();\n      }\n    }\n\n    // spare pieces\n    var pieces = 'KQRBNP'.split('');\n    for (var i = 0; i < pieces.length; i++) {\n      var whitePiece = 'w' + pieces[i];\n      var blackPiece = 'b' + pieces[i];\n      SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\n      SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\n    }\n  }\n\n  //------------------------------------------------------------------------------\n  // Markup Building\n  //------------------------------------------------------------------------------\n\n  function buildBoardContainer() {\n    var html = '<div class=\"' + CSS.chessboard + '\">';\n    if (cfg.sparePieces === true) {\n      html += '<div class=\"' + CSS.sparePieces + ' ' + CSS.sparePiecesTop + '\"></div>';\n    }\n    html += '<div class=\"' + CSS.board + '\"></div>';\n    if (cfg.sparePieces === true) {\n      html += '<div class=\"' + CSS.sparePieces + ' ' + CSS.sparePiecesBottom + '\"></div>';\n    }\n    html += '</div>';\n    return html;\n  }\n\n  /*\r\n  var buildSquare = function(color, size, id) {\r\n    var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n    'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n    'id=\"' + id + '\">';\r\n  \r\n    if (cfg.showNotation === true) {\r\n  \r\n    }\r\n  \r\n    html += '</div>';\r\n  \r\n    return html;\r\n  };\r\n  */\n\n  function buildBoard(orientation) {\n    if (orientation !== 'black') {\n      orientation = 'white';\n    }\n    var html = '';\n\n    // algebraic notation / orientation\n    var alpha = deepCopy(COLUMNS);\n    var row = 8;\n    if (orientation === 'black') {\n      alpha.reverse();\n      row = 1;\n    }\n    var squareColor = 'white';\n    for (var i = 0; i < 8; i++) {\n      html += '<div class=\"' + CSS.row + '\">';\n      for (var j = 0; j < 8; j++) {\n        var square = alpha[j] + row;\n        html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' + 'square-' + square + '\" ' + 'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' + 'id=\"' + SQUARE_ELS_IDS[square] + '\" ' + 'data-square=\"' + square + '\">';\n        if (cfg.showNotation === true) {\n          // alpha notation\n          if (orientation === 'white' && row === 1 || orientation === 'black' && row === 8) {\n            html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' + alpha[j] + '</div>';\n          }\n\n          // numeric notation\n          if (j === 0) {\n            html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' + row + '</div>';\n          }\n        }\n        html += '</div>'; // end .square\n\n        squareColor = squareColor === 'white' ? 'black' : 'white';\n      }\n      html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\n      squareColor = squareColor === 'white' ? 'black' : 'white';\n      if (orientation === 'white') {\n        row--;\n      } else {\n        row++;\n      }\n    }\n    return html;\n  }\n  function buildPieceImgSrc(piece) {\n    if (typeof cfg.pieceTheme === 'function') {\n      return cfg.pieceTheme(piece);\n    }\n    if (typeof cfg.pieceTheme === 'string') {\n      return cfg.pieceTheme.replace(/{piece}/g, piece);\n    }\n\n    // NOTE: this should never happen\n    error(8272, 'Unable to build image source for cfg.pieceTheme.');\n    return '';\n  }\n  function buildPiece(piece, hidden, id) {\n    var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\n    if (id && typeof id === 'string') {\n      html += 'id=\"' + id + '\" ';\n    }\n    html += 'alt=\"\" ' + 'class=\"' + CSS.piece + '\" ' + 'data-piece=\"' + piece + '\" ' + 'style=\"width: ' + SQUARE_SIZE + 'px;' + 'height: ' + SQUARE_SIZE + 'px;';\n    if (hidden === true) {\n      html += 'display:none;';\n    }\n    html += '\" />';\n    return html;\n  }\n  function buildSparePieces(color) {\n    var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\n    if (color === 'black') {\n      pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\n    }\n    var html = '';\n    for (var i = 0; i < pieces.length; i++) {\n      html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\n    }\n    return html;\n  }\n\n  //------------------------------------------------------------------------------\n  // Animations\n  //------------------------------------------------------------------------------\n\n  function animateSquareToSquare(src, dest, piece, completeFn) {\n    // get information about the source and destination squares\n    var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\n    var srcSquarePosition = srcSquareEl.offset();\n    var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\n    var destSquarePosition = destSquareEl.offset();\n\n    // create the animated piece and absolutely position it\n    // over the source square\n    var animatedPieceId = uuid();\n    $('body').append(buildPiece(piece, true, animatedPieceId));\n    var animatedPieceEl = $('#' + animatedPieceId);\n    animatedPieceEl.css({\n      display: '',\n      position: 'absolute',\n      top: srcSquarePosition.top,\n      left: srcSquarePosition.left\n    });\n\n    // remove original piece from source square\n    srcSquareEl.find('.' + CSS.piece).remove();\n\n    // on complete\n    var complete = function () {\n      // add the \"real\" piece to the destination square\n      destSquareEl.append(buildPiece(piece));\n\n      // remove the animated piece\n      animatedPieceEl.remove();\n\n      // run complete function\n      if (typeof completeFn === 'function') {\n        completeFn();\n      }\n    };\n\n    // animate the piece to the destination square\n    var opts = {\n      duration: cfg.moveSpeed,\n      complete: complete\n    };\n    animatedPieceEl.animate(destSquarePosition, opts);\n  }\n  function animateSparePieceToSquare(piece, dest, completeFn) {\n    var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\n    var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\n    var destOffset = destSquareEl.offset();\n\n    // create the animate piece\n    var pieceId = uuid();\n    $('body').append(buildPiece(piece, true, pieceId));\n    var animatedPieceEl = $('#' + pieceId);\n    animatedPieceEl.css({\n      display: '',\n      position: 'absolute',\n      left: srcOffset.left,\n      top: srcOffset.top\n    });\n\n    // on complete\n    var complete = function () {\n      // add the \"real\" piece to the destination square\n      destSquareEl.find('.' + CSS.piece).remove();\n      destSquareEl.append(buildPiece(piece));\n\n      // remove the animated piece\n      animatedPieceEl.remove();\n\n      // run complete function\n      if (typeof completeFn === 'function') {\n        completeFn();\n      }\n    };\n\n    // animate the piece to the destination square\n    var opts = {\n      duration: cfg.moveSpeed,\n      complete: complete\n    };\n    animatedPieceEl.animate(destOffset, opts);\n  }\n\n  // execute an array of animations\n  function doAnimations(a, oldPos, newPos) {\n    if (a.length === 0) {\n      return;\n    }\n    ANIMATION_HAPPENING = true;\n    var numFinished = 0;\n    function onFinish() {\n      numFinished++;\n\n      // exit if all the animations aren't finished\n      if (numFinished !== a.length) return;\n      drawPositionInstant();\n      ANIMATION_HAPPENING = false;\n\n      // run their onMoveEnd function\n      if (cfg.hasOwnProperty('onMoveEnd') === true && typeof cfg.onMoveEnd === 'function') {\n        cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\n      }\n    }\n    for (var i = 0; i < a.length; i++) {\n      // clear a piece\n      if (a[i].type === 'clear') {\n        $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece).fadeOut(cfg.trashSpeed, onFinish);\n      }\n\n      // add a piece (no spare pieces)\n      if (a[i].type === 'add' && cfg.sparePieces !== true) {\n        $('#' + SQUARE_ELS_IDS[a[i].square]).append(buildPiece(a[i].piece, true)).find('.' + CSS.piece).fadeIn(cfg.appearSpeed, onFinish);\n      }\n\n      // add a piece from a spare piece\n      if (a[i].type === 'add' && cfg.sparePieces === true) {\n        animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\n      }\n\n      // move a piece\n      if (a[i].type === 'move') {\n        animateSquareToSquare(a[i].source, a[i].destination, a[i].piece, onFinish);\n      }\n    }\n  }\n\n  // returns the distance between two squares\n  function squareDistance(s1, s2) {\n    s1 = s1.split('');\n    var s1x = COLUMNS.indexOf(s1[0]) + 1;\n    var s1y = parseInt(s1[1], 10);\n    s2 = s2.split('');\n    var s2x = COLUMNS.indexOf(s2[0]) + 1;\n    var s2y = parseInt(s2[1], 10);\n    var xDelta = Math.abs(s1x - s2x);\n    var yDelta = Math.abs(s1y - s2y);\n    if (xDelta >= yDelta) return xDelta;\n    return yDelta;\n  }\n\n  // returns an array of closest squares from square\n  function createRadius(square) {\n    var squares = [];\n\n    // calculate distance of all squares\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1);\n\n        // skip the square we're starting from\n        if (square === s) continue;\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        });\n      }\n    }\n\n    // sort by distance\n    squares.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n\n    // just return the square code\n    var squares2 = [];\n    for (var i = 0; i < squares.length; i++) {\n      squares2.push(squares[i].square);\n    }\n    return squares2;\n  }\n\n  // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n  function findClosestPiece(position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square);\n\n    // search through the position in order of distance for the piece\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i];\n      if (position.hasOwnProperty(s) === true && position[s] === piece) {\n        return s;\n      }\n    }\n    return false;\n  }\n\n  // calculate an array of animations that need to happen in order to get\n  // from pos1 to pos2\n  function calculateAnimations(pos1, pos2) {\n    // make copies of both\n    pos1 = deepCopy(pos1);\n    pos2 = deepCopy(pos2);\n    var animations = [];\n    var squaresMovedTo = {};\n\n    // remove pieces that are the same in both positions\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n      if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\n        delete pos1[i];\n        delete pos2[i];\n      }\n    }\n\n    // find all the \"move\" animations\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n      var closestPiece = findClosestPiece(pos1, pos2[i], i);\n      if (closestPiece !== false) {\n        animations.push({\n          type: 'move',\n          source: closestPiece,\n          destination: i,\n          piece: pos2[i]\n        });\n        delete pos1[closestPiece];\n        delete pos2[i];\n        squaresMovedTo[i] = true;\n      }\n    }\n\n    // add pieces to pos2\n    for (var i in pos2) {\n      if (pos2.hasOwnProperty(i) !== true) continue;\n      animations.push({\n        type: 'add',\n        square: i,\n        piece: pos2[i]\n      });\n      delete pos2[i];\n    }\n\n    // clear pieces from pos1\n    for (var i in pos1) {\n      if (pos1.hasOwnProperty(i) !== true) continue;\n\n      // do not clear a piece if it is on a square that is the result\n      // of a \"move\", ie: a piece capture\n      if (squaresMovedTo.hasOwnProperty(i) === true) continue;\n      animations.push({\n        type: 'clear',\n        square: i,\n        piece: pos1[i]\n      });\n      delete pos1[i];\n    }\n    return animations;\n  }\n\n  //------------------------------------------------------------------------------\n  // Control Flow\n  //------------------------------------------------------------------------------\n\n  function drawPositionInstant() {\n    // clear the board\n    boardEl.find('.' + CSS.piece).remove();\n\n    // add the pieces\n    for (var i in CURRENT_POSITION) {\n      if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\n      $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\n    }\n  }\n  function drawBoard() {\n    boardEl.html(buildBoard(CURRENT_ORIENTATION));\n    drawPositionInstant();\n    if (cfg.sparePieces === true) {\n      if (CURRENT_ORIENTATION === 'white') {\n        sparePiecesTopEl.html(buildSparePieces('black'));\n        sparePiecesBottomEl.html(buildSparePieces('white'));\n      } else {\n        sparePiecesTopEl.html(buildSparePieces('white'));\n        sparePiecesBottomEl.html(buildSparePieces('black'));\n      }\n    }\n  }\n\n  // given a position and a set of moves, return a new position\n  // with the moves executed\n  function calculatePositionFromMoves(position, moves) {\n    position = deepCopy(position);\n    for (var i in moves) {\n      if (moves.hasOwnProperty(i) !== true) continue;\n\n      // skip the move if the position doesn't have a piece on the source square\n      if (position.hasOwnProperty(i) !== true) continue;\n      var piece = position[i];\n      delete position[i];\n      position[moves[i]] = piece;\n    }\n    return position;\n  }\n  function setCurrentPosition(position) {\n    var oldPos = deepCopy(CURRENT_POSITION);\n    var newPos = deepCopy(position);\n    var oldFen = objToFen(oldPos);\n    var newFen = objToFen(newPos);\n\n    // do nothing if no change in position\n    if (oldFen === newFen) return;\n\n    // run their onChange function\n    if (cfg.hasOwnProperty('onChange') === true && typeof cfg.onChange === 'function') {\n      cfg.onChange(oldPos, newPos);\n    }\n\n    // update state\n    CURRENT_POSITION = position;\n  }\n  function isXYOnSquare(x, y) {\n    for (var i in SQUARE_ELS_OFFSETS) {\n      if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\n      var s = SQUARE_ELS_OFFSETS[i];\n      if (x >= s.left && x < s.left + SQUARE_SIZE && y >= s.top && y < s.top + SQUARE_SIZE) {\n        return i;\n      }\n    }\n    return 'offboard';\n  }\n\n  // records the XY coords of every square into memory\n  function captureSquareOffsets() {\n    SQUARE_ELS_OFFSETS = {};\n    for (var i in SQUARE_ELS_IDS) {\n      if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\n      SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\n    }\n  }\n  function removeSquareHighlights() {\n    boardEl.find('.' + CSS.square).removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\n  }\n  function snapbackDraggedPiece() {\n    // there is no \"snapback\" for spare pieces\n    if (DRAGGED_PIECE_SOURCE === 'spare') {\n      trashDraggedPiece();\n      return;\n    }\n    removeSquareHighlights();\n\n    // animation complete\n    function complete() {\n      drawPositionInstant();\n      draggedPieceEl.css('display', 'none');\n\n      // run their onSnapbackEnd function\n      if (cfg.hasOwnProperty('onSnapbackEnd') === true && typeof cfg.onSnapbackEnd === 'function') {\n        cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n      }\n    }\n\n    // get source square position\n    var sourceSquarePosition = $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\n\n    // animate the piece to the target square\n    var opts = {\n      duration: cfg.snapbackSpeed,\n      complete: complete\n    };\n    draggedPieceEl.animate(sourceSquarePosition, opts);\n\n    // set state\n    DRAGGING_A_PIECE = false;\n  }\n  function trashDraggedPiece() {\n    removeSquareHighlights();\n\n    // remove the source piece\n    var newPosition = deepCopy(CURRENT_POSITION);\n    delete newPosition[DRAGGED_PIECE_SOURCE];\n    setCurrentPosition(newPosition);\n\n    // redraw the position\n    drawPositionInstant();\n\n    // hide the dragged piece\n    draggedPieceEl.fadeOut(cfg.trashSpeed);\n\n    // set state\n    DRAGGING_A_PIECE = false;\n  }\n  function dropDraggedPieceOnSquare(square) {\n    removeSquareHighlights();\n\n    // update position\n    var newPosition = deepCopy(CURRENT_POSITION);\n    delete newPosition[DRAGGED_PIECE_SOURCE];\n    newPosition[square] = DRAGGED_PIECE;\n    setCurrentPosition(newPosition);\n\n    // get target square information\n    var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\n\n    // animation complete\n    var complete = function () {\n      drawPositionInstant();\n      draggedPieceEl.css('display', 'none');\n\n      // execute their onSnapEnd function\n      if (cfg.hasOwnProperty('onSnapEnd') === true && typeof cfg.onSnapEnd === 'function') {\n        cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\n      }\n    };\n\n    // snap the piece to the target square\n    var opts = {\n      duration: cfg.snapSpeed,\n      complete: complete\n    };\n    draggedPieceEl.animate(targetSquarePosition, opts);\n\n    // set state\n    DRAGGING_A_PIECE = false;\n  }\n  function beginDraggingPiece(source, piece, x, y) {\n    // run their custom onDragStart function\n    // their custom onDragStart function can cancel drag start\n    if (typeof cfg.onDragStart === 'function' && cfg.onDragStart(source, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\n      return;\n    }\n\n    // set state\n    DRAGGING_A_PIECE = true;\n    DRAGGED_PIECE = piece;\n    DRAGGED_PIECE_SOURCE = source;\n\n    // if the piece came from spare pieces, location is offboard\n    if (source === 'spare') {\n      DRAGGED_PIECE_LOCATION = 'offboard';\n    } else {\n      DRAGGED_PIECE_LOCATION = source;\n    }\n\n    // capture the x, y coords of all squares in memory\n    captureSquareOffsets();\n\n    // create the dragged piece\n    draggedPieceEl.attr('src', buildPieceImgSrc(piece)).css({\n      display: '',\n      position: 'absolute',\n      left: x - SQUARE_SIZE / 2,\n      top: y - SQUARE_SIZE / 2\n    });\n    if (source !== 'spare') {\n      // highlight the source square and hide the piece\n      $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1).find('.' + CSS.piece).css('display', 'none');\n    }\n  }\n  function updateDraggedPiece(x, y) {\n    // put the dragged piece over the mouse cursor\n    draggedPieceEl.css({\n      left: x - SQUARE_SIZE / 2,\n      top: y - SQUARE_SIZE / 2\n    });\n\n    // get location\n    var location = isXYOnSquare(x, y);\n\n    // do nothing if the location has not changed\n    if (location === DRAGGED_PIECE_LOCATION) return;\n\n    // remove highlight from previous square\n    if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\n      $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION]).removeClass(CSS.highlight2);\n    }\n\n    // add highlight to new square\n    if (validSquare(location) === true) {\n      $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\n    }\n\n    // run onDragMove\n    if (typeof cfg.onDragMove === 'function') {\n      cfg.onDragMove(location, DRAGGED_PIECE_LOCATION, DRAGGED_PIECE_SOURCE, DRAGGED_PIECE, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n    }\n\n    // update state\n    DRAGGED_PIECE_LOCATION = location;\n  }\n  function stopDraggedPiece(location) {\n    // determine what the action should be\n    var action = 'drop';\n    if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\n      action = 'snapback';\n    }\n    if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\n      action = 'trash';\n    }\n\n    // run their onDrop function, which can potentially change the drop action\n    if (cfg.hasOwnProperty('onDrop') === true && typeof cfg.onDrop === 'function') {\n      var newPosition = deepCopy(CURRENT_POSITION);\n\n      // source piece is a spare piece and position is off the board\n      //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\n      // position has not changed; do nothing\n\n      // source piece is a spare piece and position is on the board\n      if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\n        // add the piece to the board\n        newPosition[location] = DRAGGED_PIECE;\n      }\n\n      // source piece was on the board and position is off the board\n      if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\n        // remove the piece from the board\n        delete newPosition[DRAGGED_PIECE_SOURCE];\n      }\n\n      // source piece was on the board and position is on the board\n      if (validSquare(DRAGGED_PIECE_SOURCE) === true && validSquare(location) === true) {\n        // move the piece\n        delete newPosition[DRAGGED_PIECE_SOURCE];\n        newPosition[location] = DRAGGED_PIECE;\n      }\n      var oldPosition = deepCopy(CURRENT_POSITION);\n      var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE, newPosition, oldPosition, CURRENT_ORIENTATION);\n      if (result === 'snapback' || result === 'trash') {\n        action = result;\n      }\n    }\n\n    // do it!\n    if (action === 'snapback') {\n      snapbackDraggedPiece();\n    } else if (action === 'trash') {\n      trashDraggedPiece();\n    } else if (action === 'drop') {\n      dropDraggedPieceOnSquare(location);\n    }\n  }\n\n  //------------------------------------------------------------------------------\n  // Public Methods\n  //------------------------------------------------------------------------------\n\n  // clear the board\n  widget.clear = function (useAnimation) {\n    widget.position({}, useAnimation);\n  };\n\n  // remove the widget from the page\n  widget.destroy = function () {\n    // remove markup\n    containerEl.html('');\n    draggedPieceEl.remove();\n\n    // remove event handlers\n    containerEl.unbind();\n  };\n\n  // shorthand method to get the current FEN\n  widget.fen = function () {\n    return widget.position('fen');\n  };\n\n  // flip orientation\n  widget.flip = function () {\n    return widget.orientation('flip');\n  };\n\n  /*\r\n  // TODO: write this, GitHub Issue #5\r\n  widget.highlight = function() {\r\n  \r\n  };\r\n  */\n\n  // move pieces\n  widget.move = function () {\n    // no need to throw an error here; just do nothing\n    if (arguments.length === 0) return;\n    var useAnimation = true;\n\n    // collect the moves into an object\n    var moves = {};\n    for (var i = 0; i < arguments.length; i++) {\n      // any \"false\" to this function means no animations\n      if (arguments[i] === false) {\n        useAnimation = false;\n        continue;\n      }\n\n      // skip invalid arguments\n      if (validMove(arguments[i]) !== true) {\n        error(2826, 'Invalid move passed to the move method.', arguments[i]);\n        continue;\n      }\n      var tmp = arguments[i].split('-');\n      moves[tmp[0]] = tmp[1];\n    }\n\n    // calculate position from moves\n    var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\n\n    // update the board\n    widget.position(newPos, useAnimation);\n\n    // return the new position object\n    return newPos;\n  };\n  widget.orientation = function (arg) {\n    // no arguments, return the current orientation\n    if (arguments.length === 0) {\n      return CURRENT_ORIENTATION;\n    }\n\n    // set to white or black\n    if (arg === 'white' || arg === 'black') {\n      CURRENT_ORIENTATION = arg;\n      drawBoard();\n      return CURRENT_ORIENTATION;\n    }\n\n    // flip orientation\n    if (arg === 'flip') {\n      CURRENT_ORIENTATION = CURRENT_ORIENTATION === 'white' ? 'black' : 'white';\n      drawBoard();\n      return CURRENT_ORIENTATION;\n    }\n    error(5482, 'Invalid value passed to the orientation method.', arg);\n  };\n  widget.position = function (position, useAnimation) {\n    // no arguments, return the current position\n    if (arguments.length === 0) {\n      return deepCopy(CURRENT_POSITION);\n    }\n\n    // get position as FEN\n    if (typeof position === 'string' && position.toLowerCase() === 'fen') {\n      return objToFen(CURRENT_POSITION);\n    }\n\n    // default for useAnimations is true\n    if (useAnimation !== false) {\n      useAnimation = true;\n    }\n\n    // start position\n    if (typeof position === 'string' && position.toLowerCase() === 'start') {\n      position = deepCopy(START_POSITION);\n    }\n\n    // convert FEN to position object\n    if (validFen(position) === true) {\n      position = fenToObj(position);\n    }\n\n    // validate position object\n    if (validPositionObject(position) !== true) {\n      error(6482, 'Invalid value passed to the position method.', position);\n      return;\n    }\n    if (useAnimation === true) {\n      // start the animations\n      doAnimations(calculateAnimations(CURRENT_POSITION, position), CURRENT_POSITION, position);\n\n      // set the new position\n      setCurrentPosition(position);\n    }\n    // instant update\n    else {\n      setCurrentPosition(position);\n      drawPositionInstant();\n    }\n  };\n  widget.resize = function () {\n    // calulate the new square size\n    SQUARE_SIZE = calculateSquareSize();\n\n    // set board width\n    boardEl.css('width', SQUARE_SIZE * 8 + 'px');\n\n    // set drag piece size\n    draggedPieceEl.css({\n      height: SQUARE_SIZE,\n      width: SQUARE_SIZE\n    });\n\n    // spare pieces\n    if (cfg.sparePieces === true) {\n      containerEl.find('.' + CSS.sparePieces).css('paddingLeft', SQUARE_SIZE + BOARD_BORDER_SIZE + 'px');\n    }\n\n    // redraw the board\n    drawBoard();\n  };\n\n  // set the starting position\n  widget.start = function (useAnimation) {\n    widget.position('start', useAnimation);\n  };\n\n  //------------------------------------------------------------------------------\n  // Browser Events\n  //------------------------------------------------------------------------------\n\n  function isTouchDevice() {\n    return 'ontouchstart' in document.documentElement;\n  }\n\n  // reference: http://www.quirksmode.org/js/detect.html\n  function isMSIE() {\n    return navigator && navigator.userAgent && navigator.userAgent.search(/MSIE/) !== -1;\n  }\n  function stopDefault(e) {\n    e.preventDefault();\n  }\n  function mousedownSquare(e) {\n    // do nothing if we're not draggable\n    if (cfg.draggable !== true) return;\n    var square = $(this).attr('data-square');\n\n    // no piece on this square\n    if (validSquare(square) !== true || CURRENT_POSITION.hasOwnProperty(square) !== true) {\n      return;\n    }\n    beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\n  }\n  function touchstartSquare(e) {\n    // do nothing if we're not draggable\n    if (cfg.draggable !== true) return;\n    var square = $(this).attr('data-square');\n\n    // no piece on this square\n    if (validSquare(square) !== true || CURRENT_POSITION.hasOwnProperty(square) !== true) {\n      return;\n    }\n    e = e.originalEvent;\n    beginDraggingPiece(square, CURRENT_POSITION[square], e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n  }\n  function mousedownSparePiece(e) {\n    // do nothing if sparePieces is not enabled\n    if (cfg.sparePieces !== true) return;\n    var piece = $(this).attr('data-piece');\n    beginDraggingPiece('spare', piece, e.pageX, e.pageY);\n  }\n  function touchstartSparePiece(e) {\n    // do nothing if sparePieces is not enabled\n    if (cfg.sparePieces !== true) return;\n    var piece = $(this).attr('data-piece');\n    e = e.originalEvent;\n    beginDraggingPiece('spare', piece, e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n  }\n  function mousemoveWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return;\n    updateDraggedPiece(e.pageX, e.pageY);\n  }\n  function touchmoveWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return;\n\n    // prevent screen from scrolling\n    e.preventDefault();\n    updateDraggedPiece(e.originalEvent.changedTouches[0].pageX, e.originalEvent.changedTouches[0].pageY);\n  }\n  function mouseupWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return;\n\n    // get the location\n    var location = isXYOnSquare(e.pageX, e.pageY);\n    stopDraggedPiece(location);\n  }\n  function touchendWindow(e) {\n    // do nothing if we are not dragging a piece\n    if (DRAGGING_A_PIECE !== true) return;\n\n    // get the location\n    var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX, e.originalEvent.changedTouches[0].pageY);\n    stopDraggedPiece(location);\n  }\n  function mouseenterSquare(e) {\n    // do not fire this event if we are dragging a piece\n    // NOTE: this should never happen, but it's a safeguard\n    if (DRAGGING_A_PIECE !== false) return;\n    if (cfg.hasOwnProperty('onMouseoverSquare') !== true || typeof cfg.onMouseoverSquare !== 'function') return;\n\n    // get the square\n    var square = $(e.currentTarget).attr('data-square');\n\n    // NOTE: this should never happen; defensive\n    if (validSquare(square) !== true) return;\n\n    // get the piece on this square\n    var piece = false;\n    if (CURRENT_POSITION.hasOwnProperty(square) === true) {\n      piece = CURRENT_POSITION[square];\n    }\n\n    // execute their function\n    cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n  }\n  function mouseleaveSquare(e) {\n    // do not fire this event if we are dragging a piece\n    // NOTE: this should never happen, but it's a safeguard\n    if (DRAGGING_A_PIECE !== false) return;\n    if (cfg.hasOwnProperty('onMouseoutSquare') !== true || typeof cfg.onMouseoutSquare !== 'function') return;\n\n    // get the square\n    var square = $(e.currentTarget).attr('data-square');\n\n    // NOTE: this should never happen; defensive\n    if (validSquare(square) !== true) return;\n\n    // get the piece on this square\n    var piece = false;\n    if (CURRENT_POSITION.hasOwnProperty(square) === true) {\n      piece = CURRENT_POSITION[square];\n    }\n\n    // execute their function\n    cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\n  }\n\n  //------------------------------------------------------------------------------\n  // Initialization\n  //------------------------------------------------------------------------------\n\n  function addEvents() {\n    // prevent browser \"image drag\"\n    $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\n\n    // mouse drag pieces\n    boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\n    containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece);\n\n    // mouse enter / leave square\n    boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare).on('mouseleave', '.' + CSS.square, mouseleaveSquare);\n\n    // IE doesn't like the events on the window object, but other browsers\n    // perform better that way\n    if (isMSIE() === true) {\n      // IE-specific prevent browser \"image drag\"\n      document.ondragstart = function () {\n        return false;\n      };\n      $('body').on('mousemove', mousemoveWindow).on('mouseup', mouseupWindow);\n    } else {\n      $(window).on('mousemove', mousemoveWindow).on('mouseup', mouseupWindow);\n    }\n\n    // touch drag pieces\n    if (isTouchDevice() === true) {\n      boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\n      containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece);\n      $(window).on('touchmove', touchmoveWindow).on('touchend', touchendWindow);\n    }\n  }\n  function initDom() {\n    // create unique IDs for all the elements we will create\n    createElIds();\n\n    // build board and save it in memory\n    containerEl.html(buildBoardContainer());\n    boardEl = containerEl.find('.' + CSS.board);\n    if (cfg.sparePieces === true) {\n      sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\n      sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\n    }\n\n    // create the drag piece\n    var draggedPieceId = uuid();\n    $('body').append(buildPiece('wP', true, draggedPieceId));\n    draggedPieceEl = $('#' + draggedPieceId);\n\n    // get the border size\n    BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\n\n    // set the size and draw the board\n    widget.resize();\n  }\n  function init() {\n    if (checkDeps() !== true || expandConfig() !== true) return;\n    initDom();\n    addEvents();\n  }\n\n  // go time\n  init();\n\n  // return the widget object\n  return widget;\n}; // end window.ChessBoard\n\n// expose util functions\nChessBoard.fenToObj = fenToObj;\nChessBoard.objToFen = objToFen;\nmodule.exports = ChessBoard;","map":{"version":3,"names":["COLUMNS","split","validMove","move","tmp","length","validSquare","square","search","validPieceCode","code","validFen","fen","replace","chunks","i","validPositionObject","pos","hasOwnProperty","fenToPieceCode","piece","toLowerCase","toUpperCase","pieceCodeToFen","fenToObj","rows","position","currentRow","row","colIndex","j","emptySquares","parseInt","objToFen","obj","ChessBoard","containerElOrId","cfg","MINIMUM_JQUERY_VERSION","START_FEN","START_POSITION","CSS","alpha","black","board","chessboard","clearfix","highlight1","highlight2","notation","numeric","sparePieces","sparePiecesBottom","sparePiecesTop","white","containerEl","boardEl","draggedPieceEl","sparePiecesTopEl","sparePiecesBottomEl","widget","ANIMATION_HAPPENING","BOARD_BORDER_SIZE","CURRENT_ORIENTATION","CURRENT_POSITION","SQUARE_SIZE","DRAGGED_PIECE","DRAGGED_PIECE_LOCATION","DRAGGED_PIECE_SOURCE","DRAGGING_A_PIECE","SPARE_PIECE_ELS_IDS","SQUARE_ELS_IDS","SQUARE_ELS_OFFSETS","uuid","c","r","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","major","minor","patch","compareSemVer","minimum","versionNum","minimumNum","error","msg","showErrors","errorText","console","log","arguments","window","alert","checkDeps","el","document","getElementById","$","fn","jquery","validAnimationSpeed","speed","expandConfig","orientation","showNotation","draggable","dropOffBoard","pieceTheme","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","calculateSquareSize","containerWidth","width","boardWidth","createElIds","pieces","whitePiece","blackPiece","buildBoardContainer","html","buildBoard","reverse","squareColor","buildPieceImgSrc","buildPiece","hidden","id","buildSparePieces","color","animateSquareToSquare","src","dest","completeFn","srcSquareEl","srcSquarePosition","offset","destSquareEl","destSquarePosition","animatedPieceId","append","animatedPieceEl","css","display","top","left","find","remove","complete","opts","duration","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","doAnimations","a","oldPos","newPos","numFinished","onFinish","drawPositionInstant","onMoveEnd","type","fadeOut","fadeIn","source","destination","squareDistance","s1","s2","s1x","indexOf","s1y","s2x","s2y","xDelta","abs","yDelta","createRadius","squares","s","push","distance","sort","b","squares2","findClosestPiece","closestSquares","calculateAnimations","pos1","pos2","animations","squaresMovedTo","closestPiece","drawBoard","calculatePositionFromMoves","moves","setCurrentPosition","oldFen","newFen","onChange","isXYOnSquare","x","y","captureSquareOffsets","removeSquareHighlights","removeClass","snapbackDraggedPiece","trashDraggedPiece","onSnapbackEnd","sourceSquarePosition","newPosition","dropDraggedPieceOnSquare","targetSquarePosition","onSnapEnd","beginDraggingPiece","onDragStart","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","action","onDrop","oldPosition","result","clear","useAnimation","destroy","unbind","flip","arg","resize","height","start","isTouchDevice","documentElement","isMSIE","navigator","userAgent","stopDefault","e","preventDefault","mousedownSquare","pageX","pageY","touchstartSquare","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","mousemoveWindow","touchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","addEvents","on","ondragstart","initDom","draggedPieceId","init","module","exports"],"sources":["Z:/IGMProfile/Desktop/final-330/ChessApp/client/node_modules/chessboardjs/www/js/chessboard.js"],"sourcesContent":["/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}