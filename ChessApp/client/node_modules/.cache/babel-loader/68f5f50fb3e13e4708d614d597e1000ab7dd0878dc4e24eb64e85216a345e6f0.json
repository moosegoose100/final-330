{"ast":null,"code":"var _jsxFileName = \"Z:\\\\IGMProfile\\\\Desktop\\\\ChessApp\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport './chat.js';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\n// Note: The Documentation Passes A Lot Of These Functions In Line.\n// To Simplify, I Created Separate Functions And Passed Thos To In Line Event Listeners\nconst App = () => {\n  _s();\n  // useState Takes In A Variable That Will Continually Change State, And A Function To Update That State\n  // See Documentation Here https://legacy.reactjs.org/docs/hooks-state.html And Here https://www.w3schools.com/react/react_usestate.asp\n  // We Will Use This For Both The Player Name As Well As The Room Code\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  // Function To Be Called When Button Is Pressed In Order To Join A Room\n  const joinRoom = () => {\n    // Check That The Name And Room Code Aren't Empty\n    if (name !== \"\" && room !== \"\") {\n      // Emit The Event To The Listener On The Server Side, Passing In The Room Code As The Parameter \n      socket.emit(\"join\", name, room);\n    }\n  };\n\n  // Index.js Uses This Return Value As The Web Page's Inner HTML\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"sign-in\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Player Name\",\n          onChange: event => {\n            setName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Room Code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Room Code\",\n          onChange: event => {\n            setRoom(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinRoom,\n          children: \"Join Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      name: name,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/fuxhdHyMl4IxVTu2wp8olwlSdE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useState","jsxDEV","_jsxDEV","socket","connect","App","_s","name","setName","room","setRoom","joinRoom","emit","class","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","Chat","_c","$RefreshReg$"],"sources":["Z:/IGMProfile/Desktop/ChessApp/client/src/App.js"],"sourcesContent":["import './App.css';\nimport './chat.js';\nimport io from 'socket.io-client';\nimport { useState } from 'react';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\n// Note: The Documentation Passes A Lot Of These Functions In Line.\n// To Simplify, I Created Separate Functions And Passed Thos To In Line Event Listeners\nconst App = () =>\n{\n  // useState Takes In A Variable That Will Continually Change State, And A Function To Update That State\n  // See Documentation Here https://legacy.reactjs.org/docs/hooks-state.html And Here https://www.w3schools.com/react/react_usestate.asp\n  // We Will Use This For Both The Player Name As Well As The Room Code\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  // Function To Be Called When Button Is Pressed In Order To Join A Room\n  const joinRoom = () =>\n  {\n    // Check That The Name And Room Code Aren't Empty\n    if (name !== \"\" && room !== \"\")\n    {\n      // Emit The Event To The Listener On The Server Side, Passing In The Room Code As The Parameter \n      socket.emit(\"join\", name, room);\n    }\n  }\n\n  // Index.js Uses This Return Value As The Web Page's Inner HTML\n  return (\n    <div class=\"container\">\n      <div class=\"sign-in\">\n        <div id=\"login-input\">\n          <h3>Name: </h3>\n          <input type=\"text\" placeholder=\"Player Name\" onChange={(event => {setName(event.target.value);})}/>\n          <h3>Room Code: </h3>\n          <input type=\"text\" placeholder=\"Room Code\" onChange={(event => {setRoom(event.target.value);})}/>\n          <br />\n          <br />\n          <button onClick={joinRoom}>Join Room</button>\n        </div>\n      </div>\n\n    <Chat socket={socket} name={name} room={room}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,kBAAkB;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAAC,uBAAuB,CAAC;;AAElD;AACA;AACA,MAAMC,GAAG,GAAGA,CAAA,KACZ;EAAAC,EAAA;EACE;EACA;EACA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMW,QAAQ,GAAGA,CAAA,KACjB;IACE;IACA,IAAIJ,IAAI,KAAK,EAAE,IAAIE,IAAI,KAAK,EAAE,EAC9B;MACE;MACAN,MAAM,CAACS,IAAI,CAAC,MAAM,EAAEL,IAAI,EAAEE,IAAI,CAAC;IACjC;EACF,CAAC;;EAED;EACA,oBACEP,OAAA;IAAKW,KAAK,EAAC,WAAW;IAAAC,QAAA,gBACpBZ,OAAA;MAAKW,KAAK,EAAC,SAAS;MAAAC,QAAA,eAClBZ,OAAA;QAAKa,EAAE,EAAC,aAAa;QAAAD,QAAA,gBACnBZ,OAAA;UAAAY,QAAA,EAAI;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACfjB,OAAA;UAAOkB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,aAAa;UAACC,QAAQ,EAAGC,KAAK,IAAI;YAACf,OAAO,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnGjB,OAAA;UAAAY,QAAA,EAAI;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBjB,OAAA;UAAOkB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,WAAW;UAACC,QAAQ,EAAGC,KAAK,IAAI;YAACb,OAAO,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;UAAC;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjGjB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjB,OAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNjB,OAAA;UAAQwB,OAAO,EAAEf,QAAS;UAAAG,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAERjB,OAAA,CAACyB,IAAI;MAACxB,MAAM,EAAEA,MAAO;MAACI,IAAI,EAAEA,IAAK;MAACE,IAAI,EAAEA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAAAb,EAAA,CArCKD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}