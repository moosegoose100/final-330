{"ast":null,"code":"var _jsxFileName = \"Z:\\\\IGMProfile\\\\Desktop\\\\ChessApp\\\\client\\\\src\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  socket,\n  name,\n  room\n}) {\n  _s();\n  // useState To Keep Track Of The Message Currently Being Typed\n  const [currentMsg, setCurrentMsg] = React.useState(\"\");\n\n  // Function To Be Called When Send Button Is Pressed, Sends The Message Out To The Other Person In The Room\n  const sendMessage = () => {\n    // Only Send A Message If It Isn't Blank\n    if (currentMsg !== \"\") {\n      // All The Data About The Message That Needs To Be Sent To Socket\n      const messageData = {\n        room: room,\n        sender: name,\n        message: currentMsg,\n        timeSent: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"message-input\",\n        type: \"text\",\n        placeholder: \"Message your oppenent\",\n        onChange: event => {\n          setCurrentMsg(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn-send\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"mRJBn76ZO3DX4mH5Zica2eMT6U8=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Chat","socket","name","room","_s","currentMsg","setCurrentMsg","useState","sendMessage","messageData","sender","message","timeSent","Date","now","getHours","getMinutes","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","_c","$RefreshReg$"],"sources":["Z:/IGMProfile/Desktop/ChessApp/client/src/chat.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction Chat ({ socket, name, room })\r\n{\r\n    // useState To Keep Track Of The Message Currently Being Typed\r\n    const [currentMsg, setCurrentMsg] = React.useState(\"\");\r\n\r\n    // Function To Be Called When Send Button Is Pressed, Sends The Message Out To The Other Person In The Room\r\n    const sendMessage = () =>\r\n    {\r\n        // Only Send A Message If It Isn't Blank\r\n        if(currentMsg !== \"\")\r\n        {\r\n            // All The Data About The Message That Needs To Be Sent To Socket\r\n            const messageData = \r\n            {\r\n                room: room,\r\n                sender: name,\r\n                message: currentMsg,\r\n                timeSent: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"chatbox\">\r\n            <div id=\"chat-header\">\r\n                <h2>Live Chat</h2>\r\n            </div>\r\n            <div id=\"chat-body\"></div>\r\n            <div id=\"chat-footer\">\r\n                <input id=\"message-input\" type=\"text\" placeholder=\"Message your oppenent\" onChange={(event => {setCurrentMsg(event.target.value);})}/>\r\n                <button id=\"btn-send\">Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAE;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAK,CAAC,EACrC;EAAAC,EAAA;EACI;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMC,WAAW,GAAGA,CAAA,KACpB;IACI;IACA,IAAGH,UAAU,KAAK,EAAE,EACpB;MACI;MACA,MAAMI,WAAW,GACjB;QACIN,IAAI,EAAEA,IAAI;QACVO,MAAM,EAAER,IAAI;QACZS,OAAO,EAAEN,UAAU;QACnBO,QAAQ,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;MACtF,CAAC;IACL;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKkB,EAAE,EAAC,SAAS;IAAAC,QAAA,gBACbnB,OAAA;MAAKkB,EAAE,EAAC,aAAa;MAAAC,QAAA,eACjBnB,OAAA;QAAAmB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACNvB,OAAA;MAAKkB,EAAE,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1BvB,OAAA;MAAKkB,EAAE,EAAC,aAAa;MAAAC,QAAA,gBACjBnB,OAAA;QAAOkB,EAAE,EAAC,eAAe;QAACM,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,uBAAuB;QAACC,QAAQ,EAAGC,KAAK,IAAI;UAACpB,aAAa,CAACoB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAAC;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtIvB,OAAA;QAAQkB,EAAE,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CAlCQJ,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}